Next up (Software):
figure out why minimist is broken on linux, or just handle it manually
reconnect on suspend (web clients)
implement certs/keys for jac mqtt
error messaging on web clients
Fix CSS media queries on mobile for web client
Add in socket reconnect after suspend

Next Up (Hardware):
Figure out what is needed for proper i2c setup from python
    - currently needs to run i2c setup on arduino

IT:
certs and keys for jac mqtt
pull socket server from git (during provisioning) then npm install then start

DONE:
Send socket message on button click
MQTT SDK integration with NodeJS
Refactor Server so Socket Server and MQTT client are at same level (move to event driven)
Receive socket message from server
Update Socket Clients when shadow changes.
Make Vagrant setup to build and deploy socket software to linux server
maybe even run ngrok on that server?
Install mosquitto during provisioning
install web server during provisioning
Add options to point clients to self hosted MQTT instead of AWS
fix option parser on linux
pass messages to socket server from jac mqtt
set up mosquitto config file (for logging)
DB backed "shadow" for jacmqtt
add mosquitto config file changes to provisioning
Wire test trellis to Edison
Port Raspberry pi python to edison
test turning on and off trellis lights
test catching trellis button presses
Create Standalone Edison Python code
    - catch button presses
    - update shadow on button presses
    - update trellis on shadow updates
    - notify of state "sync"
bring down state on connect of device
DB not being updated when getting message from device
change message priority/QoS to level 2 / Can't set to 2 not supported by AWS, set to 1